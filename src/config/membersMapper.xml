<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="membersMapper">

 <!-- 직원 전체 + 프로젝트 조인(있으면) -->
<select id="selectAllEmployeesWithJoinForProject"
        parameterType="map"
        resultType="com.oopsw.model.ProjectJoinVO">
  SELECT
    NVL(pj.project_join_no, 0)       AS projectJoinNo,
    e.employee_id                    AS employeeId,
    e.name                           AS name,
    e.position                       AS position,
    e.department                     AS department,
    e.phone_number                   AS phoneNumber,
    e.email                          AS email,
    NVL(pj.project_no, #{projectNo}) AS projectNo,
    pj.in_date                       AS inDate,
    pj.date_up                       AS dateUp,
    NVL(pj.join_flag, 0)             AS joinFlag,
    NVL(pj.manager_flag, 0)          AS managerFlag
  FROM employees e
  LEFT JOIN project_join pj
         ON pj.employee_id = e.employee_id
        AND pj.project_no  = #{projectNo}
  WHERE e.resign_date IS NULL
  ORDER BY
    CASE WHEN NVL(pj.manager_flag,0)=1 THEN 0 ELSE 1 END,
    e.department ASC, e.name ASC
</select>

<!-- 현재 참여자(좌측 리스트) -->
<select id="selectActiveProjectMembers"
        parameterType="map"
        resultType="com.oopsw.model.ProjectJoinVO">
  SELECT
    pj.project_join_no AS projectJoinNo,
    e.employee_id      AS employeeId,
    e.name             AS name,
    e.position         AS position,
    e.department       AS department,
    e.phone_number     AS phoneNumber,
    e.email            AS email,
    pj.project_no      AS projectNo,
    pj.in_date         AS inDate,
    pj.date_up         AS dateUp,
    pj.join_flag       AS joinFlag,
    pj.manager_flag    AS managerFlag
  FROM project_join pj
  JOIN employees e ON e.employee_id = pj.employee_id
  WHERE pj.project_no = #{projectNo}
    AND pj.join_flag  = 1
    AND e.resign_date IS NULL
  ORDER BY
    CASE WHEN pj.manager_flag=1 THEN 0 ELSE 1 END,
    e.department ASC, e.name ASC
</select>

<!-- 업무모달: 체크 프리셋용 -->
<select id="selectTaskJoinedPjoinNos"
        parameterType="map"
        resultType="int">
  SELECT tj.project_join_no
  FROM task_join tj
  WHERE tj.task_no   = #{taskNo}
    AND tj.join_flag = 1
</select>

<!-- 업무모달 보기용: 이 업무에 참여 중인 사람 -->
<select id="selectTaskActiveMembers"
        parameterType="map"
        resultType="com.oopsw.model.ProjectJoinVO">
  SELECT
    pj.project_join_no AS projectJoinNo,
    e.employee_id      AS employeeId,
    e.name             AS name,
    e.position         AS position,
    e.department       AS department,
    e.phone_number     AS phoneNumber,
    e.email            AS email,
    pj.project_no      AS projectNo,
    pj.in_date         AS inDate,
    pj.date_up         AS dateUp,
    pj.join_flag       AS joinFlag,
    pj.manager_flag    AS managerFlag
  FROM task_join tj
  JOIN project_join pj ON pj.project_join_no = tj.project_join_no
  JOIN employees e     ON e.employee_id      = pj.employee_id
  WHERE tj.task_no   = #{taskNo}
    AND tj.join_flag = 1
    AND e.resign_date IS NULL
  ORDER BY
    CASE WHEN pj.manager_flag=1 THEN 0 ELSE 1 END,
    e.department ASC, e.name ASC
</select>

<!-- ================= 동기화 DML ================= -->

<!-- 프로젝트: 재참여(기존 rows up) -->
<update id="rejoinExistingProjectMembers" parameterType="map">
  <if test="empIds != null and empIds.size() > 0">
    UPDATE project_join
       SET join_flag = 1,
           date_up   = SYSDATE
     WHERE project_no  = #{projectNo}
       AND employee_id IN
       <foreach collection="empIds" item="id" open="(" close=")" separator=",">
         #{id}
       </foreach>
  </if>
</update>

<!-- 프로젝트: 신규 참여 insert -->
<insert id="insertNewProjectMembers" parameterType="map">
  <if test="empIds != null and empIds.size() > 0">
    INSERT INTO project_join (project_join_no, project_no, employee_id, in_date, join_flag, manager_flag)
    SELECT seq_project_join.NEXTVAL, #{projectNo}, e.employee_id, SYSDATE, 1, 0
      FROM employees e
     WHERE e.employee_id IN
       <foreach collection="empIds" item="id" open="(" close=")" separator=",">
         #{id}
       </foreach>
       AND NOT EXISTS (
         SELECT 1
           FROM project_join pj
          WHERE pj.project_no  = #{projectNo}
            AND pj.employee_id = e.employee_id
       )
  </if>
</insert>

<!-- 프로젝트: 체크 해제자 비활성(팀장 제외). 빈 리스트면 전체(팀장 제외) 비활성 -->
<update id="deactivateRemovedProjectMembers" parameterType="map">
  UPDATE project_join
     SET join_flag = 0,
         date_up   = SYSDATE
   WHERE project_no = #{projectNo}
     AND join_flag  = 1
     AND manager_flag = 0
     <choose>
       <when test="empIds != null and empIds.size() > 0">
         AND employee_id NOT IN
         <foreach collection="empIds" item="id" open="(" close=")" separator=",">
           #{id}
         </foreach>
       </when>
       <otherwise>
         <!-- empIds 비었으면 전체(팀장 제외) 비활성 -->
       </otherwise>
     </choose>
</update>

<!-- 업무: 재참여 -->
<update id="rejoinExistingTaskMembers" parameterType="map">
  <if test="pjoinNos != null and pjoinNos.size() > 0">
    UPDATE task_join
       SET join_flag = 1,
           date_up   = SYSDATE
     WHERE task_no IN (#{taskNo})
       AND project_join_no IN
       <foreach collection="pjoinNos" item="no" open="(" close=")" separator=",">
         #{no}
       </foreach>
  </if>
</update>

<!-- 업무: 신규 참여 insert -->
<insert id="insertNewTaskMembers" parameterType="map">
  <if test="pjoinNos != null and pjoinNos.size() > 0">
    INSERT INTO task_join (task_join_no, task_no, project_join_no, in_date, join_flag)
    SELECT seq_task_join.NEXTVAL, #{taskNo}, pj.project_join_no, SYSDATE, 1
      FROM project_join pj
     WHERE pj.project_join_no IN
       <foreach collection="pjoinNos" item="no" open="(" close=")" separator=",">
         #{no}
       </foreach>
       AND NOT EXISTS (
         SELECT 1
           FROM task_join tj
          WHERE tj.task_no         = #{taskNo}
            AND tj.project_join_no = pj.project_join_no
       )
  </if>
</insert>

<!-- 업무: 체크 해제자 비활성. 빈 리스트면 해당 업무 전체 비활성 -->
<update id="deactivateRemovedTaskMembers" parameterType="map">
  UPDATE task_join
     SET join_flag = 0,
         date_up   = SYSDATE
   WHERE task_no   = #{taskNo}
     AND join_flag = 1
     <choose>
       <when test="pjoinNos != null and pjoinNos.size() > 0">
         AND project_join_no NOT IN
         <foreach collection="pjoinNos" item="no" open="(" close=")" separator=",">
           #{no}
         </foreach>
       </when>
       <otherwise>
         <!-- pjoinNos 비었으면 전체 비활성 -->
       </otherwise>
     </choose>
</update>



</mapper>
