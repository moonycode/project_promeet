<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="projectMapper">

	 <select id="selectProjectHeader" parameterType="long" resultType="com.oopsw.model.ProjectVO">
	    SELECT
	      p.project_no     AS projectNo,
	      p.creator_id     AS creatorId,
	      p.project_name   AS projectName,
	      p.client         AS client,
	      p.start_date     AS startDate,
	      p.end_date       AS endDate,
	      p.in_date        AS inDate,
	      p.up_date        AS dateUp,         <!-- 팀 일부 VO는 dateUp 네이밍 -->
	      p.description    AS description,
	      p.complete_date  AS completeDate,
	      p.del_date       AS delDate,
	      p.creator_id     AS creatorId,
	      /* 선택: 멤버/근무중 카운트 사용 시 */
	      (SELECT COUNT(*) FROM project_join pj
	        WHERE pj.project_no = p.project_no AND pj.join_flag = 1) AS membersCnt,
	      (SELECT COUNT(*) FROM project_join pj
	         JOIN employees e ON e.employee_id = pj.employee_id
	        WHERE pj.project_no = p.project_no AND pj.join_flag = 1 AND e.work_status != '퇴근') AS workingCount
	    FROM projects p
	    WHERE p.project_no = #{projectNo}
	  </select>

    <select id="getOngoingProjects" parameterType="String" resultType="com.oopsw.model.ProjectVO">
        SELECT
		    p.project_no AS projectNo,
		    p.project_name AS projectName,
		    pmc.memberCount,
		    p.client,
		    p.description,
		    NVL(tc.total_cnt, 0) AS totalCnt,
		    NVL(tc.done_cnt, 0)  AS doneCnt,
		    CASE WHEN p.end_date IS NULL THEN NULL
		         ELSE TRUNC(p.end_date - SYSDATE)
		    END AS dday
		FROM projects p
		LEFT JOIN (
		    SELECT project_no,
		    SUM(join_flag) AS memberCount
		    FROM project_join
		    GROUP BY project_no
		) pmc ON pmc.project_no = p.project_no
		LEFT JOIN (
		    SELECT t.project_no,
		           COUNT(*) AS total_cnt,
		           SUM(CASE WHEN t.task_status = '완료' THEN 1 ELSE 0 END) AS done_cnt
		      FROM tasks t
		     WHERE t.del_date IS NULL
		     GROUP BY t.project_no
		) tc ON tc.project_no = p.project_no
		
		WHERE
		    p.del_date IS NULL AND p.complete_date IS NULL
		    AND (
		        p.creator_id = #{employeeId} 
		        OR
		        p.project_no IN (
		            SELECT project_no
		            FROM project_join
		            WHERE employee_id = #{employeeId} 
		            AND join_flag = 1
		        )
		    )
		ORDER BY p.project_no ASC
    </select>

    <select id="getCompletedProjects" parameterType="String" resultType="com.oopsw.model.ProjectVO">
        SELECT
		    p.project_no,
		    p.project_name AS projectName,
		    pmc.memberCount,
		    p.client,
		    p.description
		FROM projects p
		LEFT JOIN (
		    SELECT project_no,
		    SUM(join_flag) AS memberCount
		    FROM project_join
		    GROUP BY project_no
		) pmc ON pmc.project_no = p.project_no
		
		WHERE
		    p.del_date IS NULL
		    AND p.complete_date IS NOT NULL
		    AND (
		        p.creator_id = #{creatorId} 
		        OR
		        p.project_no IN (
		            SELECT project_no
		            FROM project_join
		            WHERE employee_id = #{creatorId} 
		            AND join_flag = 1
		        )
		    )
		ORDER BY p.complete_date DESC
    </select>
    
    
    <insert id="insertProject" parameterType="java.util.Map">
        INSERT INTO projects (
            project_no, 
            creator_id, 
            project_name, 
            client,
            start_date, 
            end_date,
            in_date, 
            up_date, 
            description, 
            complete_date, 
            del_date
        ) VALUES (
            projects_seq.NEXTVAL, 
            #{creatorId}, 
            #{projectName}, 
            #{client},
            TO_DATE(NULLIF( #{startDate} ,''), 'YYYY-MM-DD'),
            TO_DATE(NULLIF( #{endDate} ,''), 'YYYY-MM-DD'),
            SYSDATE, NULL, #{description}, NULL, NULL
        )
    </insert>
    
    <insert id="insertProjectManager" parameterType="java.util.Map">
    	INSERT INTO project_join (
		  project_join_no, 
		  employee_id, 
		  project_no, 
		  in_date, 
		  up_date, 
		  join_flag,
		  manager_flag
		) VALUES (
		  project_join_seq.NEXTVAL, 
		  #{employee_id}, 
		  projects_seq.CURRVAL, 
		  SYSDATE, 
		  NULL, 
		  1,
		  1
		)
    </insert>
    
    <select id="getProjectByNo" parameterType="int" resultType="com.oopsw.model.ProjectVO">
	    SELECT
	        project_no AS projectNo,
	        project_name AS projectName,
	        client,
	        description,
	        creator_id AS creatorId,
	        start_date AS startDate,
	        end_date AS endDate,
	        in_date AS inDate,
	        up_date AS dateUp,
	        complete_date AS completeDate,
	        del_date AS delDate
	    FROM projects
	    WHERE project_no = #{projectNo} AND del_date IS NULL
	</select>
    

	<update id="updateProject" parameterType="java.util.Map">
        UPDATE projects SET
            project_name = #{projectName}, 
            client = #{client},
            start_date = TO_DATE(NULLIF( #{startDate} ,''), 'YYYY-MM-DD'),
            end_date = TO_DATE(NULLIF( #{endDate} ,''), 'YYYY-MM-DD'),
            description = #{description},
            up_date = SYSDATE
        WHERE 
            project_no = #{projectNo}
    </update>
    

    <update id="completeProject" parameterType="int">
        UPDATE projects SET 
            complete_date = SYSDATE
        WHERE 
         	project_no = #{projectNo}
    </update>
    

    <update id="deleteProject" parameterType="int">
    	UPDATE projects SET 
    		del_date = SYSDATE
	 	WHERE project_no = #{projectNo}
    </update>
    

    <select id="getBinProjects" parameterType="String" resultType="com.oopsw.model.ProjectVO">
	    SELECT
	        p.project_no,
	        p.project_name AS projectName,
	        pmc.memberCount,
	        p.client,
	        p.description,
	        NVL(tc.total_cnt, 0) AS totalCnt,
	        NVL(tc.done_cnt, 0) AS doneCnt
	    FROM projects p
	    LEFT JOIN (
	        SELECT project_no,
	        SUM(join_flag) AS memberCount
	        FROM project_join
	        GROUP BY project_no
	    ) pmc ON pmc.project_no = p.project_no
	    LEFT JOIN (
	        SELECT t.project_no,
	               COUNT(*) AS total_cnt,
	               SUM(CASE WHEN t.task_status = '완료' THEN 1 ELSE 0 END) AS done_cnt
	          FROM tasks t
	         WHERE t.del_date IS NULL
	         GROUP BY t.project_no
	    ) tc ON tc.project_no = p.project_no
	    
	    WHERE
	        p.del_date IS NOT NULL
	        AND (
	            p.creator_id = #{creatorId}
	            OR
	            p.project_no IN (
	                SELECT project_no
	                FROM project_join
	                WHERE employee_id = #{creatorId}
	                AND join_flag = 1
	            )
	        )
	    ORDER BY p.del_date DESC
	</select>
    
    <select id="selectBinProject" parameterType="int" resultType="com.oopsw.model.ProjectVO">
		SELECT 
		    project_no AS projectNo, 
		    creator_id AS creatorId,
		    project_name AS projectName, 
		    client,
		    start_date AS startDate, 
		    end_date AS endDate,
		    description
		FROM projects
		WHERE project_no = #{projectNo} AND del_date IS NOT NULL
    </select>
    
    <!-- 프로젝트 복원 -->
    <update id="restoreProject" parameterType="int">
    	UPDATE projects SET 
    		complete_date = NULL,
    		del_date = NULL
 		WHERE project_no = #{projectNo}
    </update>
</mapper>
